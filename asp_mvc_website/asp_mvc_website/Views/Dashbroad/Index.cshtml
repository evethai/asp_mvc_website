@model List<OrderModel>
@{
    Layout = "/Views/Shared/_LayoutAd.cshtml";
}
<div id="page-inner">
    <div class="row">
        <div class="col-md-12">
            <h2>Admin Dashboard</h2>
            <h5>Welcome Jhon Deo , Love to see you back. </h5>
        </div>
    </div>
    <div class="row">
        <div class="col-md-3 col-sm-6 col-xs-6">
            <div class="panel panel-back noti-box">
                <span class="icon-box bg-color-red set-icon">
                    <i class="fa fa-envelope-o"></i>
                </span>
                <div class="text-box">
                    <p class="main-text">@Model.ToList().Count()</p>
                    <p class="text-muted">Số lượng Order</p>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-sm-6 col-xs-6">
            <div class="panel panel-back noti-box">
                <span class="icon-box bg-color-green set-icon">
                    <i class="fa fa-bars"></i>
                </span>
                <div class="text-box">
                    <p class="main-text"  id="RevenueShow"></p>
                    <p class="text-muted" id="RevenueMonth"></p>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-sm-6 col-xs-6">
            <div class="panel panel-back noti-box">
                <span class="icon-box bg-color-blue set-icon">
                    <i class="fa fa-bell-o"></i>
                </span>
                <div class="text-box">
                    <p class="main-text">240 New</p>
                    <p class="text-muted">Notifications</p>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-sm-6 col-xs-6">
            <div class="panel panel-back noti-box">
                <span class="icon-box bg-color-brown set-icon">
                    <i class="fa fa-rocket"></i>
                </span>
                <div class="text-box">
                    <p class="main-text">3 Orders</p>
                    <p class="text-muted">Pending</p>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-9 col-sm-12 col-xs-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Bar Chart Example
                </div>
                <div class="panel-body">
                    <div id="morris-bar-chart"></div>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-sm-12 col-xs-12">
            <div class="panel panel-primary text-center no-boder bg-color-green">
                <div class="panel-body">
                    <i class="fa fa-bar-chart-o fa-5x"></i>
                    <h3>120 GB </h3>
                </div>
                <div class="panel-footer back-footer-green">
                    Disk Space Available

                </div>
            </div>
            <div class="panel panel-primary text-center no-boder bg-color-red">
                <div class="panel-body">
                    <i class="fa fa-edit fa-5x"></i>
                    <h3>20,000 </h3>
                </div>
                <div class="panel-footer back-footer-red">
                    Articles Pending
                </div>
            </div>
        </div>

    </div>
</div>
@section Scripts {
    <script>
        setTimeout(() => {
            setInterval(() => {
                var date = new Date();
                var month = getMonthFromDate(date);
                $("#RevenueMonth").text("Total Revenues in " + month);
                checkPayment(month);
            }, 1000);
        }, 2000);
        function getMonthFromDate(date) {
            const monthIndex = date.getMonth();
            const month = monthIndex + 1;
            return month;
        }

        let isSuccess = false;
        async function checkPayment(month) {
            if (isSuccess) {
                return;
            } else {
                try {
                    const response = await fetch(
                        "https://script.google.com/macros/s/AKfycbzQ52rqTIhTS3VMlZ-N89XqSzDi6TDsnF9CdiBmX8bYqqwYmpk1bZRlIIwxSzS8Eh3fFw/exec"
                    );
                    const data = await response.json();
                    let totalRevenue = 0;
                    // Check if data is not empty
                    if (data.data && data.data.length > 0) {
                        var dataList = data.data;                
                        for (const item of dataList) {
                            const itemMonth = layThangFromDate(item["Ngày diễn ra"]);
                            const itemRevenue = item["Giá trị"];
                            if (itemMonth == month) {
                                totalRevenue += itemRevenue;
                            }
                        }
                        $("#RevenueShow").text(totalRevenue);
                    } else {
                        console.log("No data available.");
                    }
                } catch (error) {
                    console.log("Error fetching or processing data:", error);
                }
            }
        }

        // Function to calculate total revenue from a list of JSON objects
        function calculateTotalRevenueForList(dataList, targetMonth) {
            let totalRevenue = 0;

            for (const item of dataList) {
                const itemMonth = item["Ngày diễn ra"];
                const itemRevenue = item["Giá trị"];

                // Check if the item's month matches the target month
                if (itemMonth === targetMonth) {
                    totalRevenue += itemRevenue;
                }
            }
            return totalRevenue;
        }
        function layThangFromDate(dateString) {
            // Chuyển đổi chuỗi thành đối tượng Date
            var dateObject = new Date(dateString);

            // Lấy tháng từ đối tượng Date
            var thang = dateObject.getMonth() + 1; // Tháng bắt đầu từ 0, nên cần cộng thêm 1
            return thang;
        }
    </script>
}